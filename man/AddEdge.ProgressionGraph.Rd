% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/progressionGraph.R
\name{AddEdge.ProgressionGraph}
\alias{AddEdge.ProgressionGraph}
\title{Adds edges to an object of type \code{ProgressionGraph}}
\usage{
AddEdge.ProgressionGraph(object, fromNodeNames, toNodeNames,
  isResetEdge = FALSE)
}
\arguments{
\item{object}{the \code{ProgressionGraph} to add new edges}

\item{fromNodeNames}{a vector of starting nodes of edges}

\item{toNodeNames}{a vector of ending nodes of edges. For example An edge
is added between fromNodeNames[i] to toNodeNames[i] for all i}

\item{isResetEdge}{logical value for whether these edges are edges for
which patient time switches are reset (this wouldbe true, in case of crossing over onto
a different arm and then requiring a lag before the new treatment kicks in)}
}
\value{
a new \code{ProgressionGraph} with the new edges added

If an edge is attempted to be added twice, e.g. 
AddEdge.ProgressionGraph <- (g,from=c("a","a"),to=c("b","b")) it will
only be added once. 

If an edge already exists then a warning message will be displayed
}
\description{
Adds edges to an object of type \code{ProgressionGraph} ensuring
that the graph remains a DAG. An exception is thrown if a cycle is
introduced or an edge which already exists is attempted to be added
}

